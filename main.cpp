
#include "UnionFind.h"
#include <iostream>
#include "cassert"
using namespace std;
using namespace Ehsan;

int main()
{
    UnionFind<int> uni(40,200);
    uni.Union(25,7);
//{0->[0],1->[1],2->[2],3->[3],4->[4],5->[5],6->[6],8->[8],9->[9],10->[10],11->[11],12->[12],13->[13],14->[14],15->[15],16->[16],17->[17],18->[18],19->[19],20->[20],21->[21],22->[22],23->[23],24->[24],25->[7, 25],26->[26],27->[27],28->[28],29->[29],30->[30],31->[31],32->[32],33->[33],34->[34],35->[35],36->[36],37->[37],38->[38],39->[39],}
    assert(uni.Find(39)==39);
    uni.Union(4,8);
//{0->[0],1->[1],2->[2],3->[3],5->[5],6->[6],8->[8, 4],9->[9],10->[10],11->[11],12->[12],13->[13],14->[14],15->[15],16->[16],17->[17],18->[18],19->[19],20->[20],21->[21],22->[22],23->[23],24->[24],25->[7, 25],26->[26],27->[27],28->[28],29->[29],30->[30],31->[31],32->[32],33->[33],34->[34],35->[35],36->[36],37->[37],38->[38],39->[39],}
    assert(uni.Find(22)==22);
    uni.Union(11,20);
//{0->[0],1->[1],2->[2],3->[3],5->[5],6->[6],8->[8, 4],9->[9],10->[10],12->[12],13->[13],14->[14],15->[15],16->[16],17->[17],18->[18],19->[19],20->[20, 11],21->[21],22->[22],23->[23],24->[24],25->[7, 25],26->[26],27->[27],28->[28],29->[29],30->[30],31->[31],32->[32],33->[33],34->[34],35->[35],36->[36],37->[37],38->[38],39->[39],}
    assert(uni.Find(31)==31);
    uni.Union(11,9);
//{0->[0],1->[1],2->[2],3->[3],5->[5],6->[6],8->[8, 4],10->[10],12->[12],13->[13],14->[14],15->[15],16->[16],17->[17],18->[18],19->[19],20->[9, 20, 11],21->[21],22->[22],23->[23],24->[24],25->[7, 25],26->[26],27->[27],28->[28],29->[29],30->[30],31->[31],32->[32],33->[33],34->[34],35->[35],36->[36],37->[37],38->[38],39->[39],}
    assert(uni.Find(25)==25);
    uni.Union(13,33);
//{0->[0],1->[1],2->[2],3->[3],5->[5],6->[6],8->[8, 4],10->[10],12->[12],14->[14],15->[15],16->[16],17->[17],18->[18],19->[19],20->[9, 20, 11],21->[21],22->[22],23->[23],24->[24],25->[7, 25],26->[26],27->[27],28->[28],29->[29],30->[30],31->[31],32->[32],33->[33, 13],34->[34],35->[35],36->[36],37->[37],38->[38],39->[39],}
    assert(uni.Find(37)==37);
    uni.Union(16,34);
//{0->[0],1->[1],2->[2],3->[3],5->[5],6->[6],8->[8, 4],10->[10],12->[12],14->[14],15->[15],17->[17],18->[18],19->[19],20->[9, 20, 11],21->[21],22->[22],23->[23],24->[24],25->[7, 25],26->[26],27->[27],28->[28],29->[29],30->[30],31->[31],32->[32],33->[33, 13],34->[34, 16],35->[35],36->[36],37->[37],38->[38],39->[39],}
    assert(uni.Find(37)==37);
    uni.Union(28,26);
//{0->[0],1->[1],2->[2],3->[3],5->[5],6->[6],8->[8, 4],10->[10],12->[12],14->[14],15->[15],17->[17],18->[18],19->[19],20->[9, 20, 11],21->[21],22->[22],23->[23],24->[24],25->[7, 25],27->[27],28->[26, 28],29->[29],30->[30],31->[31],32->[32],33->[33, 13],34->[34, 16],35->[35],36->[36],37->[37],38->[38],39->[39],}
    assert(uni.Find(2)==2);
    uni.Union(36,12);
//{0->[0],1->[1],2->[2],3->[3],5->[5],6->[6],8->[8, 4],10->[10],14->[14],15->[15],17->[17],18->[18],19->[19],20->[9, 20, 11],21->[21],22->[22],23->[23],24->[24],25->[7, 25],27->[27],28->[26, 28],29->[29],30->[30],31->[31],32->[32],33->[33, 13],34->[34, 16],35->[35],36->[12, 36],37->[37],38->[38],39->[39],}
    assert(uni.Find(32)==32);
    uni.Union(29,33);
//{0->[0],1->[1],2->[2],3->[3],5->[5],6->[6],8->[8, 4],10->[10],14->[14],15->[15],17->[17],18->[18],19->[19],20->[9, 20, 11],21->[21],22->[22],23->[23],24->[24],25->[7, 25],27->[27],28->[26, 28],30->[30],31->[31],32->[32],33->[33, 13, 29],34->[34, 16],35->[35],36->[12, 36],37->[37],38->[38],39->[39],}
    assert(uni.Find(2)==2);
    uni.Union(14,16);
//{0->[0],1->[1],2->[2],3->[3],5->[5],6->[6],8->[8, 4],10->[10],15->[15],17->[17],18->[18],19->[19],20->[9, 20, 11],21->[21],22->[22],23->[23],24->[24],25->[7, 25],27->[27],28->[26, 28],30->[30],31->[31],32->[32],33->[33, 13, 29],34->[34, 16, 14],35->[35],36->[12, 36],37->[37],38->[38],39->[39],}
    assert(uni.Find(35)==35);
    uni.Union(32,24);
//{0->[0],1->[1],2->[2],3->[3],5->[5],6->[6],8->[8, 4],10->[10],15->[15],17->[17],18->[18],19->[19],20->[9, 20, 11],21->[21],22->[22],23->[23],25->[7, 25],27->[27],28->[26, 28],30->[30],31->[31],32->[24, 32],33->[33, 13, 29],34->[34, 16, 14],35->[35],36->[12, 36],37->[37],38->[38],39->[39],}
    assert(uni.Find(17)==17);
    uni.Union(11,8);
//{0->[0],1->[1],2->[2],3->[3],5->[5],6->[6],10->[10],15->[15],17->[17],18->[18],19->[19],20->[8, 4, 9, 20, 11],21->[21],22->[22],23->[23],25->[7, 25],27->[27],28->[26, 28],30->[30],31->[31],32->[24, 32],33->[33, 13, 29],34->[34, 16, 14],35->[35],36->[12, 36],37->[37],38->[38],39->[39],}
    assert(uni.Find(22)==22);
    uni.Union(1,16);
//{0->[0],2->[2],3->[3],5->[5],6->[6],10->[10],15->[15],17->[17],18->[18],19->[19],20->[8, 4, 9, 20, 11],21->[21],22->[22],23->[23],25->[7, 25],27->[27],28->[26, 28],30->[30],31->[31],32->[24, 32],33->[33, 13, 29],34->[34, 16, 14, 1],35->[35],36->[12, 36],37->[37],38->[38],39->[39],}
    assert(uni.Find(4)==20);
    uni.Union(39,21);
//{0->[0],2->[2],3->[3],5->[5],6->[6],10->[10],15->[15],17->[17],18->[18],19->[19],20->[8, 4, 9, 20, 11],22->[22],23->[23],25->[7, 25],27->[27],28->[26, 28],30->[30],31->[31],32->[24, 32],33->[33, 13, 29],34->[34, 16, 14, 1],35->[35],36->[12, 36],37->[37],38->[38],39->[21, 39],}
    assert(uni.Find(13)==33);
    uni.Union(21,15);
//{0->[0],2->[2],3->[3],5->[5],6->[6],10->[10],17->[17],18->[18],19->[19],20->[8, 4, 9, 20, 11],22->[22],23->[23],25->[7, 25],27->[27],28->[26, 28],30->[30],31->[31],32->[24, 32],33->[33, 13, 29],34->[34, 16, 14, 1],35->[35],36->[12, 36],37->[37],38->[38],39->[15, 21, 39],}
    assert(uni.Find(37)==37);
    uni.Union(17,10);
//{0->[0],2->[2],3->[3],5->[5],6->[6],17->[10, 17],18->[18],19->[19],20->[8, 4, 9, 20, 11],22->[22],23->[23],25->[7, 25],27->[27],28->[26, 28],30->[30],31->[31],32->[24, 32],33->[33, 13, 29],34->[34, 16, 14, 1],35->[35],36->[12, 36],37->[37],38->[38],39->[15, 21, 39],}
    assert(uni.Find(11)==20);
    uni.Union(3,15);
//{0->[0],2->[2],5->[5],6->[6],17->[10, 17],18->[18],19->[19],20->[8, 4, 9, 20, 11],22->[22],23->[23],25->[7, 25],27->[27],28->[26, 28],30->[30],31->[31],32->[24, 32],33->[33, 13, 29],34->[34, 16, 14, 1],35->[35],36->[12, 36],37->[37],38->[38],39->[15, 21, 39, 3],}
    assert(uni.Find(23)==23);
    uni.Union(22,5);
//{0->[0],2->[2],6->[6],17->[10, 17],18->[18],19->[19],20->[8, 4, 9, 20, 11],22->[5, 22],23->[23],25->[7, 25],27->[27],28->[26, 28],30->[30],31->[31],32->[24, 32],33->[33, 13, 29],34->[34, 16, 14, 1],35->[35],36->[12, 36],37->[37],38->[38],39->[15, 21, 39, 3],}
    assert(uni.Find(21)==39);
    uni.Union(22,2);
//{0->[0],6->[6],17->[10, 17],18->[18],19->[19],20->[8, 4, 9, 20, 11],22->[2, 5, 22],23->[23],25->[7, 25],27->[27],28->[26, 28],30->[30],31->[31],32->[24, 32],33->[33, 13, 29],34->[34, 16, 14, 1],35->[35],36->[12, 36],37->[37],38->[38],39->[15, 21, 39, 3],}
    assert(uni.Find(7)==25);
    uni.Union(36,32);
//{0->[0],6->[6],17->[10, 17],18->[18],19->[19],20->[8, 4, 9, 20, 11],22->[2, 5, 22],23->[23],25->[7, 25],27->[27],28->[26, 28],30->[30],31->[31],33->[33, 13, 29],34->[34, 16, 14, 1],35->[35],36->[24, 32, 12, 36],37->[37],38->[38],39->[15, 21, 39, 3],}
    assert(uni.Find(14)==34);
    uni.Union(37,1);
//{0->[0],6->[6],17->[10, 17],18->[18],19->[19],20->[8, 4, 9, 20, 11],22->[2, 5, 22],23->[23],25->[7, 25],27->[27],28->[26, 28],30->[30],31->[31],33->[33, 13, 29],34->[34, 16, 14, 1, 37],35->[35],36->[24, 32, 12, 36],38->[38],39->[15, 21, 39, 3],}
    assert(uni.Find(7)==25);
    uni.Union(18,17);
//{0->[0],6->[6],17->[10, 17, 18],19->[19],20->[8, 4, 9, 20, 11],22->[2, 5, 22],23->[23],25->[7, 25],27->[27],28->[26, 28],30->[30],31->[31],33->[33, 13, 29],34->[34, 16, 14, 1, 37],35->[35],36->[24, 32, 12, 36],38->[38],39->[15, 21, 39, 3],}
    assert(uni.Find(34)==34);
    uni.Union(27,18);
//{0->[0],6->[6],17->[10, 17, 18, 27],19->[19],20->[8, 4, 9, 20, 11],22->[2, 5, 22],23->[23],25->[7, 25],28->[26, 28],30->[30],31->[31],33->[33, 13, 29],34->[34, 16, 14, 1, 37],35->[35],36->[24, 32, 12, 36],38->[38],39->[15, 21, 39, 3],}
    assert(uni.Find(37)==34);
    uni.Union(32,10);
//{0->[0],6->[6],19->[19],20->[8, 4, 9, 20, 11],22->[2, 5, 22],23->[23],25->[7, 25],28->[26, 28],30->[30],31->[31],33->[33, 13, 29],34->[34, 16, 14, 1, 37],35->[35],36->[10, 17, 18, 27, 24, 32, 12, 36],38->[38],39->[15, 21, 39, 3],}
    assert(uni.Find(11)==20);
    uni.Union(20,6);
//{0->[0],19->[19],20->[6, 8, 4, 9, 20, 11],22->[2, 5, 22],23->[23],25->[7, 25],28->[26, 28],30->[30],31->[31],33->[33, 13, 29],34->[34, 16, 14, 1, 37],35->[35],36->[10, 17, 18, 27, 24, 32, 12, 36],38->[38],39->[15, 21, 39, 3],}
    assert(uni.Find(13)==33);
    uni.Union(38,24);
//{0->[0],19->[19],20->[6, 8, 4, 9, 20, 11],22->[2, 5, 22],23->[23],25->[7, 25],28->[26, 28],30->[30],31->[31],33->[33, 13, 29],34->[34, 16, 14, 1, 37],35->[35],36->[10, 17, 18, 27, 24, 32, 12, 36, 38],39->[15, 21, 39, 3],}
    assert(uni.Find(11)==20);
    uni.Union(27,16);
//{0->[0],19->[19],20->[6, 8, 4, 9, 20, 11],22->[2, 5, 22],23->[23],25->[7, 25],28->[26, 28],30->[30],31->[31],33->[33, 13, 29],35->[35],36->[34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38],39->[15, 21, 39, 3],}
    assert(uni.Find(38)==36);
    uni.Union(12,39);
//{0->[0],19->[19],20->[6, 8, 4, 9, 20, 11],22->[2, 5, 22],23->[23],25->[7, 25],28->[26, 28],30->[30],31->[31],33->[33, 13, 29],35->[35],36->[15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38],}
    assert(uni.Find(27)==36);
    uni.Union(2,9);
//{0->[0],19->[19],20->[6, 8, 4, 9, 20, 11, 2, 5, 22],23->[23],25->[7, 25],28->[26, 28],30->[30],31->[31],33->[33, 13, 29],35->[35],36->[15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38],}
    assert(uni.Find(27)==36);
    uni.Union(12,34);
//{0->[0],19->[19],20->[6, 8, 4, 9, 20, 11, 2, 5, 22],23->[23],25->[7, 25],28->[26, 28],30->[30],31->[31],33->[33, 13, 29],35->[35],36->[15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38],}
    assert(uni.Find(11)==20);
    uni.Union(32,11);
//{0->[0],19->[19],23->[23],25->[7, 25],28->[26, 28],30->[30],31->[31],33->[33, 13, 29],35->[35],36->[6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38],}
    assert(uni.Find(39)==36);
    uni.Union(6,1);
//{0->[0],19->[19],23->[23],25->[7, 25],28->[26, 28],30->[30],31->[31],33->[33, 13, 29],35->[35],36->[6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38],}
    assert(uni.Find(37)==36);
    uni.Union(20,33);
//{0->[0],19->[19],23->[23],25->[7, 25],28->[26, 28],30->[30],31->[31],35->[35],36->[33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38],}
    assert(uni.Find(21)==36);
    uni.Union(32,1);
//{0->[0],19->[19],23->[23],25->[7, 25],28->[26, 28],30->[30],31->[31],35->[35],36->[33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38],}
    assert(uni.Find(4)==36);
    uni.Union(21,34);
//{0->[0],19->[19],23->[23],25->[7, 25],28->[26, 28],30->[30],31->[31],35->[35],36->[33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38],}
    assert(uni.Find(10)==36);
    uni.Union(22,11);
//{0->[0],19->[19],23->[23],25->[7, 25],28->[26, 28],30->[30],31->[31],35->[35],36->[33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38],}
    assert(uni.Find(35)==35);
    uni.Union(1,25);
//{0->[0],19->[19],23->[23],28->[26, 28],30->[30],31->[31],35->[35],36->[7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38],}
    assert(uni.Find(20)==36);
    uni.Union(29,16);
//{0->[0],19->[19],23->[23],28->[26, 28],30->[30],31->[31],35->[35],36->[7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38],}
    assert(uni.Find(13)==36);
    uni.Union(19,13);
//{0->[0],23->[23],28->[26, 28],30->[30],31->[31],35->[35],36->[7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19],}
    assert(uni.Find(9)==36);
    uni.Union(8,32);
//{0->[0],23->[23],28->[26, 28],30->[30],31->[31],35->[35],36->[7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19],}
    assert(uni.Find(7)==36);
    uni.Union(22,18);
//{0->[0],23->[23],28->[26, 28],30->[30],31->[31],35->[35],36->[7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19],}
    assert(uni.Find(14)==36);
    uni.Union(10,8);
//{0->[0],23->[23],28->[26, 28],30->[30],31->[31],35->[35],36->[7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19],}
    assert(uni.Find(26)==28);
    uni.Union(17,19);
//{0->[0],23->[23],28->[26, 28],30->[30],31->[31],35->[35],36->[7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19],}
    assert(uni.Find(17)==36);
    uni.Union(15,39);
//{0->[0],23->[23],28->[26, 28],30->[30],31->[31],35->[35],36->[7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19],}
    assert(uni.Find(9)==36);
    uni.Union(23,30);
//{0->[0],28->[26, 28],30->[30, 23],31->[31],35->[35],36->[7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19],}
    assert(uni.Find(33)==36);
    uni.Union(23,20);
//{0->[0],28->[26, 28],31->[31],35->[35],36->[7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19, 30, 23],}
    assert(uni.Find(25)==36);
    uni.Union(21,3);
//{0->[0],28->[26, 28],31->[31],35->[35],36->[7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19, 30, 23],}
    assert(uni.Find(35)==35);
    uni.Union(28,31);
//{0->[0],28->[31, 26, 28],35->[35],36->[7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19, 30, 23],}
    assert(uni.Find(13)==36);
    uni.Union(34,19);
//{0->[0],28->[31, 26, 28],35->[35],36->[7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19, 30, 23],}
    assert(uni.Find(11)==36);
    uni.Union(17,25);
//{0->[0],28->[31, 26, 28],35->[35],36->[7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19, 30, 23],}
    assert(uni.Find(39)==36);
    uni.Union(24,22);
//{0->[0],28->[31, 26, 28],35->[35],36->[7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19, 30, 23],}
    assert(uni.Find(26)==28);
    uni.Union(34,26);
//{0->[0],35->[35],36->[31, 26, 28, 7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19, 30, 23],}
    assert(uni.Find(18)==36);
    uni.Union(26,3);
//{0->[0],35->[35],36->[31, 26, 28, 7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19, 30, 23],}
    assert(uni.Find(15)==36);
    uni.Union(27,6);
//{0->[0],35->[35],36->[31, 26, 28, 7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19, 30, 23],}
    assert(uni.Find(28)==36);
    uni.Union(19,29);
//{0->[0],35->[35],36->[31, 26, 28, 7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19, 30, 23],}
    assert(uni.Find(37)==36);
    uni.Union(17,30);
//{0->[0],35->[35],36->[31, 26, 28, 7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19, 30, 23],}
    assert(uni.Find(33)==36);
    uni.Union(0,36);
//{35->[35],36->[31, 26, 28, 7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19, 30, 23, 0],}
    assert(uni.Find(14)==36);
    uni.Union(30,6);
//{35->[35],36->[31, 26, 28, 7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19, 30, 23, 0],}
    assert(uni.Find(27)==36);
    uni.Union(14,0);
//{35->[35],36->[31, 26, 28, 7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19, 30, 23, 0],}
    assert(uni.Find(17)==36);
    uni.Union(16,2);
//{35->[35],36->[31, 26, 28, 7, 25, 33, 13, 29, 6, 8, 4, 9, 20, 11, 2, 5, 22, 15, 21, 39, 3, 34, 16, 14, 1, 37, 10, 17, 18, 27, 24, 32, 12, 36, 38, 19, 30, 23, 0],}
    assert(uni.Find(10)==36);
    cout << "done";
}
